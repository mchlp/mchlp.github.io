{"version":3,"sources":["Assets/github.svg","Assets/linkedin.png","Assets/devpost.png","Components/Navbar.jsx","Components/SocialMediaIcon.jsx","Components/About.jsx","Components/Intro.jsx","Pages/Homepage.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","style","top","width","position","opacity","zIndex","className","Component","SocialMediaIcon","props","href","link","rel","target","src","alt","height","langSection","fontSize","map","lang","index","key","About","overflow","display","alignItems","justifyContent","backgroundColor","githubLogo","linkedinLogo","devpostLogo","split","value","Intro","background","Homepage","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"iHAAAA,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,kMCEtBC,E,iLAEb,OACI,6BACI,yBAAKC,MAAO,CACRC,IAAK,EACLC,MAAO,OACPC,SAAU,QACVC,QAAS,OACTC,OAAQ,GACTC,UAAU,kDACT,yBAAKA,UAAU,gBAAf,oB,GAXgBC,aCArB,SAASC,EAAgBC,GACpC,OACI,yBAAKH,UAAU,QACX,uBAAGI,KAAMD,EAAME,KAAMC,IAAI,sBAAsBC,OAAO,UAClD,yBAAKC,IAAKL,EAAMK,IAAKC,IAAKN,EAAMM,IAAKC,OAAO,Y,qDCctDC,EACF,yBAAKX,UAAU,uBACX,yBAAKA,UAAU,aACX,yBAAKN,MAAO,CAAEkB,SAAU,KACpB,6BACI,0BAAMZ,UAAU,oBAAhB,4BATK,CAAC,aAAc,OAAQ,SAAU,IAAK,MAAO,MAAO,OAAQ,MAAO,QAWnDa,KAAI,SAACC,EAAMC,GAAP,OACjB,0BAAMC,IAAKD,IAAmB,IAAVA,EAAc,KAAO,IAAOD,OAI5D,6BACA,6BACI,0BAAMd,UAAU,oBAAhB,qBAjBF,CAAC,MAAO,OAmBQa,KAAI,SAACC,EAAMC,GAAP,OACV,0BAAMC,IAAKD,IAAmB,IAAVA,EAAc,KAAO,IAAOD,OAI5D,6BACA,6BACI,0BAAMd,UAAU,oBAAhB,sBAzBI,CAAC,MAAO,UAAW,QAAS,QAAS,UAAW,QAAS,SAAU,UA2BnDa,KAAI,SAACC,EAAMC,GAAP,OAChB,0BAAMC,IAAKD,IAAmB,IAAVA,EAAc,KAAO,IAAOD,UAS7D,SAASG,IACpB,OACI,yBAAKvB,MAAO,CACRgB,OAAQ,QACRQ,SAAU,SACVC,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBC,gBAAiB,WAClBtB,UAAU,eACT,yBAAKA,UAAU,OACX,wCACA,yBAAKA,UAAU,OAAON,MAAO,CACzByB,QAAS,OACTE,eAAgB,WAGhB,kBAAC,EAAD,CAAkBhB,KAAK,2BAA2BG,IAAKe,IAAYd,IAAI,WACvE,kBAAC,EAAD,CAAkBJ,KAAK,0CAA0CG,IAAKgB,IAAcf,IAAI,aACxF,kBAAC,EAAD,CAAkBJ,KAAK,4BAA4BG,IAAKiB,IAAahB,IAAI,aAE7E,yBAAKT,UAAU,uBAtElB,gZAuEgB0B,MAAM,OAAOb,KAAI,SAACc,EAAOZ,GAC9B,OACI,uBAAGC,IAAKD,EAAOrB,MAAO,CAAEkB,SAAU,KAAOe,MAGhDhB,EACD,uBAAGjB,MAAO,CAAEkB,SAAU,KAAtB,+CAAwE,uBAAGR,KAAK,4BAAR,QAAxE,QCjFL,SAASwB,IACpB,OACI,yBAAKlC,MAAO,CACRgB,OAAQ,QACRQ,SAAU,SACVC,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBQ,WAAY,gDACb7B,UAAU,eACT,yBAAKA,UAAU,OACX,0CACA,wBAAIN,MAAO,CAAEkB,SAAU,KAAvB,cACA,6BACA,+F,ICXKkB,E,iLAEb,OACI,6BACI,kBAAC,EAAD,MACA,kBAACF,EAAD,MACA,kBAACX,EAAD,W,GANsBhB,aCQvB8B,MARf,WACI,OACI,yBAAK/B,UAAU,OACX,kBAAC,EAAD,QCIQgC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.a8c317e5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/github.76d344f0.svg\";","module.exports = __webpack_public_path__ + \"static/media/linkedin.3f60edfd.png\";","module.exports = __webpack_public_path__ + \"static/media/devpost.28507013.png\";","import React, { Component } from 'react';\n\nexport default class Navbar extends Component {\n    render() {\n        return (\n            <div>\n                <nav style={{\n                    top: 0,\n                    width: '100%',\n                    position: 'fixed',\n                    opacity: '0.95',\n                    zIndex: 5\n                }} className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\n                    <div className=\"navbar-brand\">Michael Pu</div>\n                </nav >\n            </div>\n        );\n    }\n}\n","import React from 'react';\n\nexport default function SocialMediaIcon(props) {\n    return (\n        <div className='mx-2'>\n            <a href={props.link} rel='noopener noreferrer' target='_blank'>\n                <img src={props.src} alt={props.alt} height='50 px' />\n            </a>\n        </div>\n    );\n}\n","import React from 'react';\nimport SocialMediadIcon from '../Components/SocialMediaIcon';\nimport githubLogo from '../Assets/github.svg';\nimport linkedinLogo from '../Assets/linkedin.png';\nimport devpostLogo from '../Assets/devpost.png';\n\nconst message = `\nHi! My name is Michael and I am currently attending the University of Waterloo \nfor Software Engineering. I've been to a few hackathons and \nparticipated a number of competitive programming competitions.\n---\nI started programming in grade nine using Python before taking interest \nin competitive programming. From then on, I've worked with numerous \nprogramming languages and frameworks.\n`;\n\nconst intermediateLang = ['JavaScript', 'Java', 'Python', 'C', 'C++', 'SQL', 'HTML', 'CSS', 'Bash'];\nconst basicLang = ['PHP', 'SQL',];\nconst frameworksTools = ['Git', 'Node.js', 'Linux', 'React', 'MongoDB', 'NginX', 'JavaFX', 'Docker'];\n\nconst langSection = (\n    <div className='card mb-3 lang-card'>\n        <div className='card-body'>\n            <div style={{ fontSize: 16 }}>\n                <div>\n                    <span className='font-weight-bold'>Intermediate Knowledge: </span>\n                    {\n                        intermediateLang.map((lang, index) => (\n                            <span key={index}>{(index !== 0 ? ', ' : '') + (lang)}</span>\n                        ))\n                    }\n                </div>\n                <br />\n                <div>\n                    <span className='font-weight-bold'>Basic Knowledge: </span>\n                    {\n                        basicLang.map((lang, index) => (\n                            <span key={index}>{(index !== 0 ? ', ' : '') + (lang)}</span>\n                        ))\n                    }\n                </div>\n                <br />\n                <div>\n                    <span className='font-weight-bold'>Frameworks/Tools: </span>\n                    {\n                        frameworksTools.map((lang, index) => (\n                            <span key={index}>{(index !== 0 ? ', ' : '') + (lang)}</span>\n                        ))\n                    }\n                </div>\n            </div>\n        </div>\n    </div >\n);\n\nexport default function About() {\n    return (\n        <div style={{\n            height: '100vh',\n            overflow: 'hidden',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            backgroundColor: '#ebedee'\n        }} className='text-center'>\n            <div className='m-5'>\n                <h1>About Me</h1>\n                <div className='my-5' style={{\n                    display: 'flex',\n                    justifyContent: 'center',\n\n                }}>\n                    <SocialMediadIcon link='https://github.com/mchlp' src={githubLogo} alt='GitHub' />\n                    <SocialMediadIcon link='https://www.linkedin.com/in/michael-pu/' src={linkedinLogo} alt='LinkedIn' />\n                    <SocialMediadIcon link='https://devpost.com/mchlp' src={devpostLogo} alt='Devpost' />\n                </div>\n                <div className='text-left container'>\n                    {message.split('---').map((value, index) => {\n                        return (\n                            <p key={index} style={{ fontSize: 20 }}>{value}</p>\n                        );\n                    })}\n                    {langSection}\n                    <p style={{ fontSize: 20 }}>Check out the projects I've been working on <a href='https://github.com/mchlp'>here</a>.</p>\n                </div>\n            </div>\n        </div>\n    );\n}\n","import React from 'react';\n\nexport default function Intro() {\n    return (\n        <div style={{\n            height: '100vh',\n            overflow: 'hidden',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            background: 'linear-gradient(to bottom, #fdfbfb, #ebedee)'\n        }} className='text-center'>\n            <div className='m-5'>\n                <h1>Hello! I&apos;m</h1>\n                <h1 style={{ fontSize: 80 }}>Michael Pu</h1>\n                <br />\n                <h3>1B Software Engineering Student at the University of Waterloo</h3>\n            </div>\n        </div>\n    );\n}\n","import React, { Component } from 'react';\nimport Navbar from '../Components/Navbar';\nimport About from '../Components/About';\nimport Intro from '../Components/Intro';\n\nexport default class Homepage extends Component {\n    render() {\n        return (\n            <div>\n                <Navbar />\n                <Intro />\n                <About />\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport './bootstrap.min.css';\nimport './App.css';\nimport Homepage from './Pages/Homepage';\n\nfunction App() {\n    return (\n        <div className='App'>\n            <Homepage />\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}